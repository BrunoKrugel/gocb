// Code generated by mockery v2.38.0. DO NOT EDIT.

package gocb

import (
	gocbcore "github.com/couchbase/gocbcore/v10"
	mock "github.com/stretchr/testify/mock"
)

// mockSearchCapabilityVerifier is an autogenerated mock type for the searchCapabilityVerifier type
type mockSearchCapabilityVerifier struct {
	mock.Mock
}

// SearchCapabilityStatus provides a mock function with given fields: cap
func (_m *mockSearchCapabilityVerifier) SearchCapabilityStatus(cap gocbcore.SearchCapability) gocbcore.CapabilityStatus {
	ret := _m.Called(cap)

	if len(ret) == 0 {
		panic("no return value specified for SearchCapabilityStatus")
	}

	var r0 gocbcore.CapabilityStatus
	if rf, ok := ret.Get(0).(func(gocbcore.SearchCapability) gocbcore.CapabilityStatus); ok {
		r0 = rf(cap)
	} else {
		r0 = ret.Get(0).(gocbcore.CapabilityStatus)
	}

	return r0
}

// newMockSearchCapabilityVerifier creates a new instance of mockSearchCapabilityVerifier. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newMockSearchCapabilityVerifier(t interface {
	mock.TestingT
	Cleanup(func())
}) *mockSearchCapabilityVerifier {
	mock := &mockSearchCapabilityVerifier{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
